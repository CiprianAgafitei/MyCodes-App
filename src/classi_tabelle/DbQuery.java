package classi_tabelle;

import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;


/**
 * Class that executes a query using the connection DbSingleConn
 * The various methods that open a connection with the 
 * autocommit flag set to false have the responsability
 * of doing the commit/rollback operation
 */
public class DbQuery {
	
    /**
     * method that executes a query and returns a resultset
     * @param aQuery
     * @param autocommit
     * @return "ResultSet"
     * @throws SQLException
     * @throws IOException
     */	
    protected ResultSet getData(String aQuery,boolean autocommit) throws SQLException, IOException {
    	Connection conn = DbSingleConn.getConnection();
        conn.setAutoCommit(autocommit);
        Statement stat = conn.createStatement();
        return stat.executeQuery(aQuery);
    } 
    
    /**
     * method that executes an insert-update-delete query and returns true or false
     * depending on the success of the operation
     * @param String aQuery
     * @param boolean autocommit
     * @return Boolean True/False
     * @throws SQLException
     * @throws IOException
     */
   
    protected static boolean setData(String aQuery,boolean autocommit) throws SQLException , IOException {
        Connection conn = DbSingleConn.getConnection();
        conn.setAutoCommit(autocommit);
        Statement stat = conn.createStatement();
        if (stat.executeUpdate(aQuery)==0) return false;
        else
        	return true;
    }
    
    /**
     * method that executes an insert-update-delete query and returns A ResultSet
     * containing the autogenerated key (integer counter)
     * if no key has been generated the ResultSet will be empty
     * @param String aQuery
     * @param boolean autocommit
     * @return ResultSet
     * @throws SQLException
     * @throws IOException
     */
   
    protected ResultSet setDataReturnGeneratedKey(String aQuery,boolean autocommit) throws SQLException , IOException {
        Connection conn = DbSingleConn.getConnection();
        conn.setAutoCommit(autocommit);
        Statement stat = conn.createStatement();
        @SuppressWarnings("unused")
		boolean b = stat.execute(aQuery,Statement.RETURN_GENERATED_KEYS);
        return stat.getGeneratedKeys();
    }
    
    /**
     * method that executes a query and returns true or false
     * depending on the existence of records or not in
     * the Recordset
     * @param String aQuery
     * @return Boolean True/False
     * @throws SQLException
     * @throws IOException
     */
    protected boolean isData(String aQuery) throws SQLException , IOException {
        Connection conn = DbSingleConn.getConnection();
        Statement stat = conn.createStatement();
        ResultSet set = stat.executeQuery(aQuery);
        return set.first();
    }
    
    protected void closeConnection()  throws SQLException, IOException{
        DbSingleConn.closeConnection();
    }
    
    protected void releaseConnection() throws SQLException , IOException {
        DbSingleConn.releaseConnection();
    }
    
    protected void commit() throws SQLException , IOException{
    	DbSingleConn.commitConnection();
    }
    
    protected void rollback() throws SQLException , IOException{
    	DbSingleConn.rollbackConnection();
    }
}
